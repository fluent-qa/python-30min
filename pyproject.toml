[project]
name = "revisited"
version = "0.1.0"
description = "30 minutes of Python"
authors = [
    { name = "fluent-qa team", email = "fluent-qa@fluentqa.com" },
]
dependencies = [
    "pydantic>=2.7.3",
    "httpx>=0.27.0",
    "langchain>=0.2.3",
    "langchain-openai>=0.1.8",
    "langserve[all]>=0.2.1",
    "streamlit>=1.35.0",
    "python-dotenv>=1.0.1",
    "langchain-core>=0.2.5",
    "langchain-anthropic>=0.1.15",
    "promptlayer>=0.5.6",
    "anthropic>=0.28.0",
    "onnxruntime>=1.18.0",
    "dynaconf>=3.2.5",
    "faker>=25.8.0",
    "apispec>=6.6.1",
    "connexion>=3.1.0",
    "jsonpath-rw>=1.4.0",
    "swagger-ui-bundle>=1.1.0",
    "redis>=5.0.5",
    "retry>=0.9.2",
    "pyright>=1.1.367",
    "pretzelai>=4.2.5",
    "jupyter-notebook-parser>=0.1.4",
    "voici>=0.6.1",
    "nbdev>=2.3.25",
    "bokeh>=3.4.1",
    "marimo>=0.6.19",
    "nbconvert[test]>=7.16.4",
]
requires-python = ">=3.11"
readme = "README.md"
license = { text = "MIT" }


[tool.poetry]
name = "revisited"
version = "0.1.0"
description = ""
authors = ["fluent-qa  <fluent-qa@fluentqa.com>"]
readme = "README.md"
packages = [{ from ='src',include = "revisited" }]

[tool.poetry.dependencies]
python = "^3.11"



pydantic-settings = "^2.3.1"
[tool.pdm]
distribution = false
#plugins = ["pdm-mina"]

[tool.pdm.dev-dependencies]
lint = [
    "ruff>=0.4.8",
]
pytest = [
    "pytest-cov>=5.0.0",
]

docs = [
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.26",
]
pre-commit = []
[[tool.pdm.source]]
name = "tsinghua-mirrors"
url = "https://pypi.tuna.tsinghua.edu.cn/simple/"


[tool.pdm.scripts]
lint = "ruff ."
fmt = "ruff format ."
docs = "mkdocs serve"
docs-deploy ="mkdocs gh-deploy --force"
cleanup ="rm -rf site __pycache__"
test="pytest"
#[build-system]
#requires = ["poetry-core"]
#build-backend = "poetry.core.masonry.api"

[build-system]
requires = ["mina-build>=0.2.5"]
build-backend = "pdm.backend"

#[build-system]
#requires = ["pdm-backend", "pdm-polylith-workspace"]
#build-backend = "pdm.backend"

[[tool.poetry.source]]
name = "douban"
url = "https://pypi.doubanio.com/simple/"
priority = "supplemental"


[[tool.poetry.source]]
name = "mirrors"
url = "https://pypi.tuna.tsinghua.edu.cn/simple/"
priority = "primary"


[tool.ruff]
select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "E", # pycodestyle - Error
    "F", # Pyflakes
    "I", # isort
    "W", # pycodestyle - Warning
    "UP", # pyupgrade
]
ignore = [
    "E501", # line-too-long
    "W191", # tab-indentation
]
include = ["**/*.py", "**/*.pyi", "**/pyproject.toml"]

[tool.ruff.pydocstyle]
convention = "google"

