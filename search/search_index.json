{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Revisited Python","text":"<ul> <li>Setup Project</li> <li>Intermedia Skills</li> <li>Easy to Use Libs</li> <li>Framework Composition</li> <li>LLM/RAG/AI</li> </ul>"},{"location":"setup/1-poetry/","title":"Setup Project With Poetry","text":"<ul> <li>Init Project</li> <li>Add Dep</li> <li>Build and Publish</li> </ul>"},{"location":"setup/1-poetry/#1-poetry-install","title":"1. Poetry Install","text":"<p>\u5b89\u88c5\u547d\u4ee4: </p> <pre><code>pip install pipx -U\npipx install poetry\npipx ensurepath\n</code></pre>"},{"location":"setup/1-poetry/#2-poetry","title":"2. Poetry \u65b0\u5efa\u9879\u76ee","text":"<pre><code>poetry new pyqa-30min\n\n</code></pre>"},{"location":"setup/1-poetry/#3-folder","title":"3. \u4e0d\u540c\u7684\u4ee3\u7801folder\u7ed3\u6784:","text":"<ul> <li>\u6ca1\u6709src\u76ee\u5f55:</li> </ul> <pre><code>poetry-demo\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 poetry_demo\n\u2502   \u2514\u2500\u2500 __init__.py\n\u2514\u2500\u2500 tests\n    \u2514\u2500\u2500 __init__.py\n</code></pre> <p>\u6307\u5b9a\u6253\u5305\u5185\u5bb9\uff1a</p> <pre><code>packages = [{include = \"poetry_demo\"}]\n</code></pre> <ul> <li>\u6709src\u76ee\u5f55\u7ed3\u6784:</li> </ul> <pre><code>poetry-demo\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 poetry_demo\n\u2502       \u2514\u2500\u2500 __init__.py\n\u2514\u2500\u2500 tests\n    \u2514\u2500\u2500 __init__.py\n</code></pre> <pre><code>packages = [{include = \"poetry_demo\"\uff0cfrom=\"src\"}]\n</code></pre>"},{"location":"setup/1-poetry/#2-dependency-groups","title":"2. \u5b89\u88c5\u4f9d\u8d56\u548c\u4f9d\u8d56\u7ec4(Dependency groups)","text":"<pre><code>[tool.poetry.dependencies]  # main dependency group\nhttpx = \"*\"\npendulum = \"*\"\n[tool.poetry.group.test.dependencies]\npytest = \"^6.0.0\"\npytest-mock = \"*\"\n[tool.poetry.group.dev.dependencies]\npytest = \"^6.0.0\"\npytest-mock = \"*\"\n</code></pre> <ul> <li>\u5b89\u88c5\u4f9d\u8d56</li> </ul> <pre><code>poetry add httpx pendulum\n</code></pre> <ul> <li>\u5b89\u88c5\u5206\u7ec4\u4f9d\u8d56</li> </ul> <pre><code>poetry add pytest pytest-mock --group test\npoetry add pytest pytest-mock --group dev\n\n</code></pre> <ul> <li>\u5b89\u88c5/\u5220\u9664\u5206\u7ec4</li> </ul> <pre><code>poetry install --without test,docs\npoetry install --only main\npoetry install --with docs\npoetry remove mkdocs --group docs\n</code></pre> <ul> <li>poetry.lock \u6587\u4ef6: \u9501\u5b9a\u5b89\u88c5\u7684\u4f9d\u8d56\u7248\u672c</li> </ul> <p>Dependency synchronization ensures that the locked dependencies in the poetry.lock</p> <pre><code>poetry install --sync\n</code></pre>"},{"location":"setup/1-poetry/#3poetry-build-and-publish","title":"3.poetry build and publish","text":"<pre><code>poetry build\npoetry publish\npoetry publish -r my-repository\n</code></pre> <p>\u5982\u4f55\u8bbe\u7f6epublish credentials</p>"},{"location":"setup/1-poetry/#4-poetry","title":"4. Poetry \u5e38\u7528\u547d\u4ee4","text":"<ul> <li>\u4f7f\u7528python</li> </ul> <pre><code>poetry env use /full/path/to/python\n</code></pre> <ul> <li>\u521b\u5efa\u865a\u62df\u73af\u5883\u548c\u83b7\u53d6\u73af\u5883\u4fe1\u606f</li> </ul> <pre><code>poetry shell\npoetry env info\n\n</code></pre> <ul> <li>\u6dfb\u52a0\u4f9d\u8d56</li> </ul> <pre><code>poetry add httpx\npoetry add \"httpx[all]\"\n</code></pre> <ul> <li>\u5b89\u88c5</li> </ul> <pre><code>poetry install -vvv\n</code></pre> <ul> <li>build\u548c\u53d1\u5e03</li> </ul> <pre><code>poetry build\npoetry install\n</code></pre>"},{"location":"setup/1-poetry/#4","title":"4. \u989d\u5916","text":"<ul> <li>\u6dfb\u52a0github \u4f9d\u8d56</li> </ul> <pre><code>[tool.poetry.dependencies]\npython = \"&gt;=3.10,&lt;3.12\"\nfluentpy = { git = \"git@github.com:qa/fluentpy.git\", branch = \"main\" }\n</code></pre> <ul> <li>\u5176\u4ed6\u8be6\u7ec6\u5185\u5bb9\u53c2\u8003\u5b98\u65b9\u7f51\u7ad9</li> </ul> <p>python-poetry</p>"},{"location":"setup/2-conda/","title":"Conda \u8bbe\u7f6e\u73af\u5883","text":"<p>Conda\u4e5f\u662f\u5e38\u7528\u7ba1\u7406\u865a\u62df\u73af\u5883\u7684\u4e00\u4e2a\u5de5\u5177\uff0c\u4e3b\u8981\u7528\u5728Python\u6570\u5b57\u5206\u6790\u76f8\u5173\u9879\u76ee\u4e2d</p>"},{"location":"setup/2-conda/#_1","title":"\u521b\u5efa\u73af\u5883","text":"<pre><code> conda env create --name pyqa-30min --file .devcontainer/environment.yml\n</code></pre> <p>environment.yml \u5185\u5bb9:</p> <pre><code>name: pyqa-30min\nchannels:\n - defaults\ndependencies:\n- python=3.11\n</code></pre> <p>\u6240\u6709\u7684dependencies\u90fd\u53ef\u4ee5\u52a0\u5728dependencies\u4e2d,\u8fd9\u91cc\u53ea\u8868\u793a\u662fpython 3.11\u7248\u672c\uff0c\u4f9d\u8d56\u90fd\u53ef\u4ee5\u6dfb\u52a0.</p>"},{"location":"setup/2-conda/#_2","title":"\u6fc0\u6d3b\u73af\u5883","text":"<pre><code>conda activate pyqa-30min\n</code></pre>"},{"location":"setup/2-conda/#_3","title":"\u67e5\u770b\u6240\u6709\u7684\u865a\u62df\u73af\u5883","text":"<pre><code>conda env list\n</code></pre>"},{"location":"setup/2-conda/#conda_1","title":"\u8be6\u7ec6Conda\u547d\u4ee4","text":"<p>\u53ef\u4ee5\u4f7f\u7528tldr\u67e5\u770b\u6bd4\u8f83\u8be6\u7ec6\u7684Conda\u547d\u4ee4</p> <pre><code>tldr conda\n</code></pre> <pre><code>\u276f tldr conda \n\n  conda\n\n  Package, dependency and environment management for any programming language.\n  Some subcommands such as conda create have their own usage documentation.\n  More information: https://github.com/conda/conda.\n\n  - Create a new environment, installing named packages into it:\n    conda create --name environment_name python=3.9 matplotlib\n\n  - List all environments:\n    conda info --envs\n\n  - Load an environment:\n    conda activate environment_name\n\n  - Unload an environment:\n    conda deactivate\n\n  - Delete an environment (remove all packages):\n    conda remove --name environment_name --all\n\n  - Install packages into the current environment:\n    conda install python=3.4 numpy\n\n  - List currently installed packages in current environment:\n    conda list\n\n  - Delete unused packages and caches:\n    conda clean --all\n\n</code></pre>"},{"location":"setup/2-conda/#condapoetry","title":"Conda+Poetry","text":"<p>poetry\u4f1a\u81ea\u52a8\u4f7f\u7528conda\u7684\u5305\u7ba1\u7406\u5668\uff0c\u6240\u4ee5poetry\u548cconda\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u3002activate conda\u73af\u5883\u4e4b\u540e\uff0c\u8fd0\u884cpoetry\u547d\u4ee4 \u53ef\u4ee5\u8fdb\u884c\u4f9d\u8d56\u7684\u5b89\u88c5\u7b49\u64cd\u4f5c\u800c\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd.</p>"},{"location":"setup/3-jupter-notebook/","title":"jupyter notebook \u73af\u5883","text":""},{"location":"setup/3-jupter-notebook/#install","title":"install","text":""},{"location":"setup/3-pdm/","title":"PDM Setup","text":"<ul> <li>pdm-project</li> <li>https://rudeigerc.dev/posts/structuring-a-python-project/</li> </ul>"},{"location":"setup/3-pdm/#pdm-setup_1","title":"PDM setup","text":"<pre><code>pdm init\npdm install\npdm remove\npdm info --env\n</code></pre>"},{"location":"setup/3-pdm/#pdm-config","title":"PDM Config","text":"<pre><code>pdm config\npdm init -n --backend pdm-backend minimal\n</code></pre> <p>https://rudeigerc.dev/posts/structuring-a-python-project/</p>"},{"location":"setup/4-generative-ai/","title":"Generative AI \u73af\u5883\u642d\u5efa","text":"<ol> <li>environment.yml\u6587\u4ef6\u58f0\u660e\u73af\u5883</li> </ol> <pre><code>name: gen-ai\nchannels:\n - defaults\ndependencies:\n- python=3.11\n- openai\n- python-dotenv\n</code></pre> <ol> <li>\u4f7f\u7528conda \u521b\u5efa\u73af\u5883</li> </ol> <pre><code>conda env create --name qpy30min --file .devcontainer/environment.yml\n\n</code></pre> <ol> <li>\u6fc0\u6d3b\u73af\u5883</li> </ol> <pre><code>conda activate qpy30min\n</code></pre> <ol> <li>\u914d\u5408Poetry \u4e00\u8d77\u4f7f\u7528</li> </ol> <pre><code>poetry install\n</code></pre>"},{"location":"setup/5-monorepo/","title":"Polylith and Mono Repo Architecture","text":"<ul> <li>polylith</li> </ul>"},{"location":"setup/5-monorepo/#setup","title":"setup","text":"<pre><code>poetry self add poetry-polylith-plugin\npoetry self add poetry-multiproject-plugin\n</code></pre>"}]}